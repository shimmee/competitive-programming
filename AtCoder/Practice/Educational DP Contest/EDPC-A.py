# Educational DP Contest: A - Frog 1
# URL: https://atcoder.jp/contests/dp/tasks/dp_a
# 日付: 2020/12/25

# ---------- 思ったこと / 気づいたこと ----------
#

# ------------------- 方針 --------------------
# dp[i]: i番目の足場に行くための最小コスト
# もらうDP: dp[i]は「dp[i-1]+i-1からのコスト」と「dp[i-2]+i-2からのコスト」のうち小さい方


# ------------------- 解答 --------------------
#code:python
n = int(input())
h = list(map(int, input().split()))

dp = [10**10]*(n)
dp[0] = 0
dp[1] = dp[0] + abs(h[1] - h[0])

for i in range(2, n):
    dp[i] = min(dp[i-1]+abs(h[i] - h[i-1]),
                dp[i-2]+abs(h[i] - h[i-2]))
print(dp[n-1])

# ------------------ 入力例 -------------------
4
10 30 40 20

2
10 10

6
30 10 60 10 60 50

# ----------------- 解答時間 ------------------
# 14分

# -------------- 解説 / 感想 / 反省 -------------
# https://kyopro-friends.hatenablog.com/entry/2019/01/12/230931
# 添字が大変。
# dpの更新の部分が綺麗に書けるように，初期値まわりの例外処理は多少汚くなっても仕方がなさそう。
# 手元の紙で書いたように添字を書けるのが一番望ましい

# ----------------- カテゴリ ------------------
#EDPC
#動的計画法
#DP
#復習したい